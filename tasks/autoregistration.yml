---
# autoregistration tasks file for avinetworks.avise
# these tasks will automatically register the service engine to the controller

- name: Avi SE | Autoregistration | Check if required login vars are defined
  assert:
    that:
      - item != None
  with_items:
    - master_ctl_ip
    - master_ctl_username
    - master_ctl_password

- name: Avi SE | Autoregistration | Get the cloud uuid from cloud_name
  avi_api_session:
    controller: "{{ master_ctl_ip }}"
    username: "{{ master_ctl_username }}"
    password: "{{ master_ctl_password }}"
    tenant: "{{ tenant }}"
    http_method: get
    path: "cloud?name={{ cloud_name }}"
  register: cloud_data
  delegate_to: localhost

- name: Avi SE | Autoregistration | Get a token from the Avi Controller
  avi_api_session:
    controller: "{{ master_ctl_ip }}"
    username: "{{ master_ctl_username }}"
    password: "{{ master_ctl_password }}"
    tenant: "{{ tenant }}"
    http_method: get
    path: securetoken-generate?cloud_uuid={{ cloud_data.obj.results[0].uuid}}
  delegate_to: localhost
  register: authtoken

- name: Avi SE | Autoregistration | Append the token to the docker environment variables.
  set_fact:
    avi_token: "{{ authtoken.obj.auth_token }}"

- debug: msg="Recieved Authentication {{ avi_token }} from {{ master_ctl_ip }}"
