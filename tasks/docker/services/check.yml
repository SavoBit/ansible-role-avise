---
- block:
    - name: Avi SE | Docker | Services | systemd | Include vars
      include_vars: "services/systemd.yml"
      when: ansible_service_mgr == "systemd"
    - name: Avi SE | Docker | Services | init.d | Include vars
      include_vars: "services/initd.yml"
      when: ansible_service_mgr != "systemd"
    - name: Avi SE | Docker | Services | Check for exisitng avise service
      stat: path={{ service_file }}
      register: avise_service_file
    - name: Avi SE | Docker | Services | Read existing service's docker run configuration
      shell: cat {{ avise_service_file.stat.path }} | sed -n -e 's/^.*docker run //p'
      register: existing_run_params_raw
      changed_when: false
      when: avise_service_file.stat.exists
    - set_fact:
        existing_run_params: "{{ existing_run_params_raw.stdout }}"
        avise_service_exists: "{{ avise_service_file.stat.exists }}"
      when: avise_service_file.stat.exists
  when: old_service

- block:
    - name: Avi SE | Docker | Services | Check for existing avise service
      stat: path=/usr/sbin/avise
      register: avise_service_file
    - name: Avi SE | Docker | Services | Read existing service's docker run configuration
      shell: cat /usr/sbin/avise | sed -n -e 's/^docker_run_params=//p' | tr -d '"'
      register: existing_run_params_raw
      changed_when: false
      when: avise_service_file.stat.exists
    - set_fact:
        existing_run_params: "{{ existing_run_params_raw.stdout }}"
        avise_service_exists: "{{ avise_service_file.stat.exists }}"
      when: avise_service_file.stat.exists
  when: new_service

- name: Avi SE | Docker | Services | Capture AVICOOKIE from docker run params
  set_fact:
    avi_token: "{{ existing_run_params|regex_replace('^.*AVICOOKIE=','')|regex_replace('--net.*','')|trim}}"
  when: existing_run_params is defined

- name: Avi SE | Docker | Services | Compare docker run parameters
  set_fact:
    docker_run_changed: "{{ existing_run_params != docker_run_params }}"
  when: existing_run_params is defined
