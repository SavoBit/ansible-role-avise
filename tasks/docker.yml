---
# We must do this step first just in case we need to override defaults from the supplied package
- name: Avi SE | Docker | Package Deploy
  include: docker/package_deploy.yml
  when: package_deploy

- name: Avi SE | Docker | Check if specified image already exists.
  shell: "docker images -q {{ se_image }}"
  changed_when: false
  register: docker_match

- name: Avi SE | Docker | Docker Hub
  include: docker/docker_hub.yml
  when: docker_repo == None and not package_deploy

- name: Avi SE | Docker | Custom Repo
  include: docker/custom_repo.yml
  when: docker_repo != None and not package_deploy

- name: Avi SE | Service | Set service fact for deploy
  set_fact:
    old_service: "{{ se_version|version_compare('17.0.0', '<') or se_version == 'latest' }}"
    new_service: "{{ se_version|version_compare('17.0.0', '>=') }}"

- name: Avi SE | Docker | Check if specified image already exists.
  shell: "docker images -q {{ se_image }}"
  changed_when: false
  register: docker_match

- name: Avi SE | Docker | Get our desired docker image id.
  shell: "docker images -q {{ se_image }}"
  changed_when: false
  register: docker_image

- name: Avi SE | Docker | Get list of running se containers
  shell: "docker ps -q -f name=avise"
  changed_when: false
  register: running_se_containers

- name: Avi SE | Docker | Check if desired version is already running.
  shell: "docker ps -q -f ancestor={{ docker_image.stdout }}"
  changed_when: false
  register: desired_running

- name: Avi SE | Check for existing avise service
  stat:
    path: "{{ item }}"
  register: service_installed
  with_items:
    - /etc/systemd/system/avise.service
    - /etc/init.d/avise

- name: Avi SE | Stop avise service
  service: name=avise enabled=no state=stopped
  when:
    - "{{ item.stat.exists }} == true"
    - desired_running.stdout == ""
  with_items: "{{ service_installed.results }}"


- name: Avi SE | Docker | Stop and Remove the container if it's not the desired version.
  shell: "docker stop {{ item }} && docker rm -f {{ item }}"
  with_items:
    - "{{ running_se_containers.stdout_lines }}"
  when:
    - item not in desired_running.stdout_lines
    - stopped_service.changed
